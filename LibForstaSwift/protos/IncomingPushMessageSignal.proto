syntax = "proto2";

package signal;

message Envelope {
  enum Type {
    UNKNOWN       = 0;
    CIPHERTEXT    = 1;
    KEY_EXCHANGE  = 2;
    PREKEY_BUNDLE = 3;
    RECEIPT       = 5;
  }

  optional Type   type          = 1;
  optional string source        = 2;
  optional uint32 sourceDevice  = 7;
  optional string relay         = 3;
  optional uint64 timestamp     = 5;
  optional bytes  legacyMessage = 6; // Contains an encrypted DataMessage
  optional bytes  content       = 8; // Contains an encrypted Content
  optional uint64 age           = 9; // How long the message was stored on the server.
  optional uint64 received      = 10; // Server added timestamp of when message came in.
}

message Content {
  optional DataMessage dataMessage = 1;
  optional SyncMessage syncMessage = 2;
}

message DataMessage {
  enum Flags {
    END_SESSION = 1;
    EXPIRATION_TIMER_UPDATE = 2;
  }

  optional string             body        = 1;
  repeated AttachmentPointer  attachments = 2;
  optional uint32             flags       = 4;
  optional uint32             expireTimer = 5;
}

message SyncMessage {
  message Sent {
    optional string  destination = 1;
    optional uint64  timestamp   = 2;
    optional DataMessage message = 3;
    optional uint64  expirationStartTimestamp = 4;
  }

  message Contacts {
    optional AttachmentPointer blob = 1;
  }

  message Groups {
    optional AttachmentPointer blob = 1;
  }

  message Blocked {
    repeated string addrs = 1;
  }

  message Request {
    enum Type {
      UNKNOWN     = 0;
      CONTACTS    = 1;
      GROUPS      = 2;
      BLOCKED     = 3;
    }
    optional Type type = 1;
  }
  message Read {
    optional string sender    = 1;
    optional uint64 timestamp = 2;
  }

  optional Sent     sent     = 1;
  optional Contacts contacts = 2;
  optional Groups   groups   = 3;
  optional Request  request  = 4;
  repeated Read     read     = 5;
  optional Blocked  blocked  = 6;
}

message AttachmentPointer {
  optional fixed64 id          = 1;
  optional string  contentType = 2;
  optional bytes   key         = 3;
}
